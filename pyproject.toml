[tool.poetry]
name = "example-service-kueue"
version = "0.5.0"
description = "An example Octue Twined data service using Kueue as the service backend."
authors = ["Marcus Lugg <marcus@octue.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "example_service_kueue"}]

[tool.poetry.dependencies]
python = "^3.11"
octue = { git = "https://github.com/octue/octue-sdk-python", branch = "add-kueue-service-backend" }

[tool.poetry.group.dev.dependencies]
gcp-storage-emulator = "2022.4.13"
pre-commit = "^2.20.0"

[tool.ruff]
line-length = 120
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes.
lint.select = ["E", "F"]
# Ignore E501 line-too-long - see https://docs.astral.sh/ruff/faq/#is-the-ruff-linter-compatible-with-black for why
lint.ignore = ["F405", "E501", "E203", "E731", "N818"]

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
force-sort-within-sections = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
